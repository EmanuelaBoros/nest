#############################################################################
# Configuration for the Ceres runtime as used by NEST.
# All properties described here can also be passed to the VM as system
# properties using the standard Java
#   -D<property>=<value>
# syntax. In addition, it is possible to use macros of the form
#   ${<property>}
# within a value. Macros will expand to the value of the referred (system)
# property.
#############################################################################

# The NEST home directory. Used only if
# (1) this configuration file has been specified by the system property 'nest.config' or
# (2) the system property 'nest.home' has not been specified before.
# With other words, this setting will not overwrite an existing 'nest.home' property.
# Has no default value, must be given as system property if not specified here.
nest.home = .

# The library path to be searched for common JARs. Can comprise multiple paths.
# Multple paths must be separated using ';' (Windows) or ':' (Unix)
# Default value is '${nest.home}/lib'.
# nest.libDirs = ${nest.home}/lib

# The directory to be searched for modules.
# Default value is '${nest.home}/modules'.
# nest.modules = ${nest.home}/modules

# The ID of the application to launch.
# Has no default value, must be given as system property if not specified here.
nest.app = DatMain

nest.version=4B

nest.repository.url = http://www.array.ca/nest-web/repository/

# Output log to the console?
# Default is 'false'.
nest.consoleLog = false

# The log level, must be one of
# OFF, SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST, ALL.
# Default is 'OFF'.
nest.logLevel = OFF

# Outputs extra debugging information for Ceres launcher and runtime
# Default value is 'false'.
nest.debug = false

# The path to the image for the splash screen's.
# If none is given the application will start without displaying
# a splash screen.
nest.splash.image = ${nest.home}/res/NEST_Splash.png
nest.homePageUrl = http://www.array.ca/nest

# The splash screen's progress bar area given as <x>,<y>,<width>,<height>
# Default value is '0,<splash.height>-9,<splash.width>,5'.
nest.splash.progressBar.area = 131,219,322,10

# The splash screen's progress bar color given as <R>,<G>,<B>[,<A]
# Default value is '0,255,0' (green).
nest.splash.progressBar.color = 0,170,0,190

# Weather or not the splash screen shall show a task label.
# Default value is 'false'.
nest.splash.taskLabel.enabled = true

# The font of the task label of the splash screen.
# Default value is 'Verdana,ITALIC,10'.
nest.splash.taskLabel.font = Verdana,ITALIC,10

# The colour of the task label of the splash screen given as <R>,<G>,<B>[,<A].
# Default value is '255,255,255' (white).
nest.splash.taskLabel.color = 0,0,0,255

# The position of the task label of the splash screen given as <x>,<y>.
# Default value is '<splash.progressBar.area.x>,<splash.progressBar.area.y>+<splash.progressBar.area.height>+10'.
nest.splash.taskLabel.pos = 134,214

# Controls caching of tiles of intermediate operations from raw raster data
# to the finally displayed RGB image (since BEAM 4.5).
# The default value is 'false', meaning that no intermediate tile caching takes place.
beam.imageManager.enableIntermediateTileCaching = false

# Controls caching of tiles of graph processing framework (GPF) operators (since BEAM 4.5). 
# The default value is 'false', meaning that GPF operator tiles are always cached.
beam.gpf.disableOperatorTileCaching = false

# JAI Tile cache size
jai.tileCache.memoryCapacity=128
jai.tileSize=128

# Controls whether a PixelGeoCoding is attached to MERIS FRG/FSG products (created with AMORGOS),
# if an Envisat (N1) data file is opened.
# The default value is 'false', meaning that a Tie-point geo-coding is used instead.
# beam.envisat.amorgos.usePixelGeoCoding = true

# Controls the name of the inital geometry container, which is automatically created if
# the users draws the first geometry in a VISAT session.
# The default value is 'geometry'.
# beam.geometry.initialName = geometry


# Test Paths
# Some unit tests open all products within a folder and apply thier processing to verify they don't get any error
nest.test.ReadersOnAllProducts = true
nest.test.ProcessingOnAllProducts = true
# max number of products to test from each root folder. Use -1 to test all.
nest.test.maxProductsPerRootFolder = 3
nest.test.subsetX = 100
nest.test.subsetY = 100
nest.test.subsetWidth = 100
nest.test.subsetHeight = 100

nest.test.rootPathExpectedProducts = P:\\nest\\nest\\test\\
nest.test.rootPathTerraSarX = P:\\nest\\nest\\ESA Data\\RADAR\\TerraSarX
nest.test.rootPathASAR= P:\\nest\\nest\\ESA Data\\RADAR\\ASAR
nest.test.rootPathRadarsat2 = IP:\\nest\\nest\\ESA Data\\RADAR\\Radarsat2
nest.test.rootPathRadarsat1 = P:\\nest\\nest\\ESA Data\\RADAR\\Radarsat1
nest.test.rootPathERS = P:\\nest\\nest\\ESA Data\\RADAR\\ERS_products
nest.test.rootPathJERS = P:\\nest\\nest\\ESA Data\\RADAR\\JERS
#nest.test.rootPathALOS = P:\\nest\\nest\\ESA Data\\RADAR\\ALOS PALSAR
nest.test.rootPathCosmoSkymed = P:\\nest\\nest\\ESA Data\\RADAR\\Cosmo
nest.test.rootPathMixProducts = P:\\nest\\nest\\ESA Data\\NestBox
#nest.test.rootPathMixProducts = P:\\nest\\nest\\ESA Data\\RADAR\\Global Monitoring Mode
